@page "/fetchdata"
@using BlazorMsIdentity.Shared.Policy
@using BlazorServer.B2C.Data
@inject WeatherForecastService ForecastService
@attribute [Authorize(Policy = @CustomPolicies.DirectorPolicy)]

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <Paper>
        <div class="table-responsive">
            <Table class="table">
                <TableHead>
                    <TableRow>
                        <TableCell>Date</TableCell>
                        <TableCell>Temp. (C)</TableCell>
                        <TableCell>Temp. (F)</TableCell>
                        <TableCell>Summary</TableCell>
                    </TableRow>
                </TableHead>
                <TableBody>
                    @foreach (var forecast in forecasts)
                    {
                        <TableRow>
                            <TableCell>@forecast.Date.ToShortDateString()</TableCell>
                            <TableCell>@forecast.TemperatureC</TableCell>
                            <TableCell>@forecast.TemperatureF</TableCell>
                            <TableCell>@forecast.Summary</TableCell>
                        </TableRow>
                    }
                </TableBody>
            </Table>
        </div>
    </Paper>
}


@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
